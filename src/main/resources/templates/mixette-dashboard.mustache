{{> header-http }}
{{> empty-menu }}
<script src="https://code.highcharts.com/highcharts.js"></script>
<script>
    var previousValues = 100;
    var previousUpdateMoment = new Date();

    // /**
    //  * Compute the displayed value by interpolating the evolution that happened between the previous-to-latest
    //  * backend update moment and the latest backend update moment, as if this evolution happened between the latest
    //  * backend update moment and the future backend update moment
    //  */
    // function computeData(newValue, newValueUpdateMoment) {
    //     const now = new Date();
    //     const ratio = (now.getTime() - newValueUpdateMoment.getTime()) /
    //             (newValueUpdateMoment.getTime() - previousUpdateMoment.getTime());
    //     return previousValue + ratio * (newValue - previousValue);
    // }

    /**
     * On the first load we use an animation to reveal the real numbers in 2 seconds
     */
    function animateData() {
        const startMoment = new Date();
        const durationMillis = 2000;
        const data = [{{#donations}}{ name: '{{name}}', y : {{amount}} },{{/donations}}];
        console.log(data);
        const stopMoment = new Date(startMoment.getTime() + durationMillis);

        //const finalData = this.computeData();
        // setInterval(() => {
        //
        // }, 30)
        //
        //                 // Animation is stopped after durationMillis
        //                 takeUntil(timer(durationMillis)),
        //                 // When animation is finished we start automatic data refresh
        //                 finalize(() => {
        //                     // Data are refreshed from server every 30 seconds
        //                     this.intervalBackendSubscription = interval(30000).subscribe(() => this.loadData());
        //                     // To animate screen we compute fake data every second
        //                     this.intervalLocalSubscription = interval(1000).subscribe(() => this.data = this.computeData());
        //                 })
        //         )
        //         .subscribe(() => {
        //             const nowMoment = moment();
        //             if (!nowMoment.isAfter(stopMoment)) {
        //                 const ratio = (nowMoment.valueOf() - startMoment.valueOf()) / durationMillis;
        //                 this.data = {
        //                     powerInMW: finalData.powerInMW * ratio,
        //                     inhabitantMillions: finalData.inhabitantMillions * ratio,
        //                     cars: finalData.cars * ratio,
        //                     co2Tons: finalData.co2Tons * ratio,
        //                     powerSystemBenefits: finalData.powerSystemBenefits * ratio,
        //                     customerBenefits: finalData.customerBenefits * ratio
        //                 };
        //             }
        //         });
    }

    window.addEventListener("load", () => animateData());
</script>
<div class="container-fluid mxt-wrapper--page-content">
    <div class="row">
        {{#organizations}}
            <div class="col-4">
                <div class="row">
                    <div class="col-2">
                        <a href="/user/{{login}}">
                            {{#photoUrl}}<img src="{{photoUrl}}" alt="{{company}}" class="mxt-img--sponsors" style="max-width: 100%">{{/photoUrl}}
                        </a>
                    </div>
                    <div class="col-10">
                        <h2>{{company}}</h2>
                    </div>
                </div>
                <br>
                <br>
                {{description}}
            </div>
        {{/organizations}}
    </div>
    <div class="row">


        <figure class="highcharts-figure">
            <div id="container"></div>
        </figure>

        <script>

            Highcharts.chart('container', {
                chart: {type: 'column'},
                title: {text: '{{#i18n}}mixette.dashboard.chart.title{{/i18n}}'},
                subtitle: {text: '{{#i18n}}mixette.dashboard.chart.subtitle{{/i18n}} {{loadAt}}'},
                xAxis: {type: 'category'},
                yAxis: {
                    title: {text: '{{#i18n}}mixette.dashboard.chart.axis{{/i18n}}'}
                },
                legend: {enabled: false},
                plotOptions: {
                    series: {
                        borderWidth: 0,
                        dataLabels: {enabled: true, format: '{point.y:.1f} â‚¬'}
                    }
                },
                tooltip: {enabled:false},
                series: [
                    {
                        name: "Mixette",
                        colorByPoint: true,
                        data: [
                        {{#donations}}
                            { name: '{{name}}', y : {{amount}} },
                       {{/donations}}
                        ]
                    }
                ]
            });
        </script>
    </div>
</div>
{{> empty-footer}}
